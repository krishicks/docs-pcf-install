---
title: Configuring Your App Autoscaling Instance
owner: Autoscaling
---

<strong><%= modified_date %></strong>

The App Autoscaling service scales bound applications in response to load.

An instance of the App Autoscaling service examines the CPU usage of an application bound to it every few minutes. In response to load changes, the service scales your app up and down according to the thresholds, minimums, and maximums that you provide.

Follow the steps below to configure your App Autoscaling service instance.

1. Log in to the Apps Manager: <%=vars.console%>

1. Select a space containing an App Autoscaling service instance from the org
dashboard or from the left navigation bar.

1. In the Services section of the space dashboard, under your App Autoscaling
service instance name, click **Manage**.
<p class='note'><strong>Note</strong>: You must specifically have the role of Space Developer to access the **Manage** link for the app autoscaling service. Space Managers, Space Auditors, and all Org roles do not have the permission to make changes to App Autoscaling. See [Managing User Accounts and Permissions Using the Apps Manager](../console/console-roles.html) for help managing user roles.</p>
<%= image_tag 'configure/0-manage-instance.png'%>

1. By default, new autoscaling instances are paused.
If paused, click **Turn On** to enable monitoring of your application and start
the autoscaling process.

	![Paused Instance](images/configure/1-paused-instance.png)

1. Click the wrench icon on your Autoscaling dashboard.

    ![Configure Autoscaling](images/configure/1-view-instance.png)

1. Change the configuration settings and click **Save**.
See the [Configuration Options](#config-options) section of this topic for
information about the configuration settings.

    ![Edit Configuration](images/configure/2-edit-config.png)

1. Examine the App Autoscaling service instance dashboard to confirm your
changes.

	![View Changes](images/configure/3-view-changes.png)

##<a id='config-options'></a>Configuration Options ##

You can set the absolute maximum and minimum number of instances for your app, as well as the CPU thresholds for an app that trigger the autoscaling service.

###<a id='instance-counts'></a>Instance Counts ###

The **Instances** values specify the absolute minimum and maximum number of instances autoscaling can set for an application.

* **Min**: Default value: `2`.
The minimum number of instances to which autoscaling can scale your app.
Autoscaling never scales your application below this number of instances.

* **Max**: Default value: `5`.
The maximum number of instances to which autoscaling can scale your app.
Autoscaling never scales your application above this number of instances.

<p class='note'><strong>Note</strong>: <strong>Min</strong> and <strong>Max</strong> cannot be set to less than <code>1</code> or greater than <code>20</code>. <strong>Min</strong> must be less than or equal to <strong>Max</strong>.</p>

###<a id='cpu-thresholds'></a>CPU Thresholds ###

The **CPU thresholds** values specify the upper and lower limits of CPU utilization that trigger the autoscaling service.

The autoscaling service calculates CPU utilization as a moving average across the CPUs of all currently running instances of an application.

* **Low**: Default value: `20`. When the autoscaling service instance detects
CPU utilization below this threshold, it reduces the number of instances of the
app by one.

* **High**: Default value: `80`. When the autoscaling service instance detects
CPU utilization above below this threshold, it increases the number of instances
of the app by one.

##<a id='manual-scaling'></a>Manual Scaling ##

If you manually scale an application bound to an autoscaling service instance,
the autoscaling service stops monitoring and autoscaling your application.

To re-enable monitoring and scaling, click **Turn On** on the App Autoscaling
service instance dashboard.

![Paused Instance](images/configure/1-paused-instance.png)